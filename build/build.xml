<?xml version="1.0"?>

<!--

PHPSpec: A Behaviour-Driven Development Framework for PHP5

Phing Usage:

    phing [ <options> ] [ <targetnames> ]

    example:

    phing dist   ...where "dist" is the target for execution

Phing Targets:

    prepare: Creates any necessary staging directories (has .pear suffix option)

    build: Prepares and stages files (has .pear suffix option)

    stage: Stages files either copying or exporting to staging directory (has .pear suffix option)

    dist: Stages and packages files to zip and gzip tarball and PEAR TGZ package

    pearify: Create a pear package.xml and source code directory tree

    clean: Cleans up, deletes staging directories, returns to state 0

Other Targets:

    src.check: Check for the existence of local source code

    svn.export: Export the source code from subversion

-->

<project name="PHPSpec" default="dist" basedir=".">

    <taskdef classname="phing.tasks.ext.d51PearPkg2Task" name="d51pearpkg2" />

    <property name="spec.src.default" value="${project.basedir}/.." />
    <property name="spec.src.classpath" value="/src" />
    <property name="spec.name" value="PHPSpec" />
    <property name="spec.version" value="0.2.0dev" /> <!-- VERSION FOR EDITING -->
    <property name="spec.stability" value="alpha" />
    <property name="spec.svn.baseurl" value="http://phpspec.googlecode.com/svn/" />
    <property name="spec.svn.url" value="${svn.url}/trunk" />
    <property name="spec.svn.tag" value="HEAD" />
    <property name="spec.svn.export" value="./${spec.name}-export-${spec.svn.tag}" />
    <property name="spec.stage" value="${project.basedir}/stage" />
    <property name="spec.pear" value="${project.basedir}/stage-pear" />
    <property name="spec.stage.dir" value="${spec.stage}/${spec.name}-${spec.version}" />
    <property name="spec.pear.dir" value="${spec.pear}/${spec.name}-${spec.version}" />
    <property name="spec.pear.package" value="${spec.name}-${spec.version}.tgz" />
    <property name="spec.dist" value="${project.basedir}/dist" />
    <property name="spec.dist.pear" value="${spec.dist}/PEAR" />
    <property name="spec.tarball" value="${spec.stage}/${spec.name}-${spec.version}.tar" />
    <property name="spec.tarball.pear" value="${spec.stage}/${spec.name}-${spec.version}.tgz" />
    <property name="spec.zipball" value="${spec.stage}/${spec.name}-${spec.version}.zip" />
	<property name="spec.script.unix" value="phpspec" />
	<property name="spec.script.windows" value="phpspec.bat" />
    <property name="lang" value="en" />
    <php expression="date('Y-m-d')" returnProperty="date"/>

    <target name="build" depends="prepare, prepare.pear, stage, stage.pear">
    </target>

    <target name="build.pear" depends="prepare.pear, stage.pear">
    </target>

    <target name="src.check">
        <available file="${spec.src.default}/src/PHPSpec/Framework.php" property="spec.src" value="${spec.src.default}" />
        <!--svnlastrevision svnpath="svn" repositoryurl="${spec.svn.url}" workingcopy="${project.basedir}" propertyname="spec.svn.revision" /-->
    </target>

    <target name="prepare" depends="src.check, prepare.dist">
        <echo msg="Making directory ${spec.stage}" />
        <mkdir dir="${spec.stage}" />
        <echo msg="Making directory ${spec.stage.dir}" />
        <mkdir dir="${spec.stage.dir}" />
    </target>

    <target name="prepare.pear" depends="src.check, prepare.dist">
        <echo msg="Making directory ${spec.pear}" />
        <mkdir dir="${spec.pear}" />
        <echo msg="Making directory ${spec.pear.dir}" />
        <mkdir dir="${spec.pear.dir}" />
    </target>

    <target name="prepare.dist">
        <echo msg="Making Distribution Files directory ${spec.dist}" />
        <mkdir dir="${spec.dist}" />
        <mkdir dir="${spec.dist.pear}" />
    </target>

    <target name="svn.export" unless="spec.src">
        <svnexport svnpath="svn" repositoryurl="${spec.svn.url}" todir="${spec.svn.export}" />
        <property name="spec.src" value="${spec.svn.export}" />
    </target>

    <target name="stage" depends="prepare, svn.export">
        <echo msg="Staging files from ${spec.src} to ${spec.stage.dir}" />
        <copy todir="${spec.stage.dir}">
            <fileset dir="${spec.src}">
                <exclude name="**/.svn/**" />
                <exclude name="build/**" />
            </fileset>
        </copy>
    </target>

    <target name="stage.pear" depends="prepare.pear, svn.export">
        <echo msg="Staging files from ${spec.src} to ${spec.pear.dir} for PEAR Packaging" />
        <copy todir="${spec.pear.dir}">
            <fileset dir="${spec.src}">
                <exclude name="**/.svn/**" />
                <exclude name="build/**" />
                <exclude name="src/**" />
            </fileset>
        </copy>
        <copy todir="${spec.pear.dir}">
            <fileset dir="${spec.src}${spec.src.classpath}">
                <exclude name="**/.svn/**" />
            </fileset>
        </copy>
    </target>

    <target name="pearify" depends="build.pear">
        <d51pearpkg2 baseinstalldir="/" dir="${spec.pear.dir}">

            <name>PHPSpec</name>
            <summary>A Behaviour-Driven Development framework for PHP</summary>
            <channel>pear.php.net</channel>
            <description>
                Note: This is a development version for testing and feedback
                purposes only.

                PHPSpec is a Behaviour-Driven Development (BDD) framework
                for PHP5. It provides a Domain Specific Language for describing
                the behaviour of PHP code with executable, readable
                specifications that guide you in designing source code. As well
                as serving as documentation of your system's behaviour, these
                specifications can be frequently executed as tests to verify
                the behaviours being specified are being maintained.
                
                BDD is often described as what you are currently doing, if you are
                doing TDD (Test-Driven Development) well. The purpose of
                BDD is to make it easier to perform and understand by using
                clear, unambiguous language driven by a user-friendly
                Domain Specific Language (DSL).
            </description>

			<date>${date}</date>
            
            <lead user="padraic" name="PÃ¡draic Brady" email="padraic@php.net" />
            <lead user="tswicegood" name="Travis Swicegood" email="developer@domain51.com" />
            <license>LGPL</license>
            
            <version release="${spec.version}" api="${spec.version}" />
            <stability release="${spec.stability}" api="${spec.stability}" />
            
            <dependencies>
                <php minimum_version="5.2.0" />
                <pear minimum_version="1.6.0" />
                <!--extension name="spl" /-->
            </dependencies>
            
            <dirroles key="scripts">script</dirroles>
            <dirroles key="tests">test</dirroles>
            <replacement path="scripts/phpspec" type="pear-config" from="@php_bin@" to="php_bin" />
            <replacement path="scripts/phpspec.bat" type="pear-config" from="@php_bin@" to="php_bin" />
            <replacement path="scripts/phpspec.bat" type="pear-config" from="@php_dir@" to="php_dir" />
            <release>
                <install as="phpspec" name="scripts/phpspec" />
                <install as="phpspec.bat" name="scripts/phpspec.bat" />
            </release>
            
            <changelog version="${spec.version}" date="${date}" license="LGPL">
                This is a DEV release for testing and
                feedback only.
            </changelog>
            
        </d51pearpkg2>
    </target>

    <target name="dist" depends="build, pearify">
        <echo message="Creating tar and zip archives..." />
        <tar destfile="${spec.tarball}.gz" basedir="${spec.stage.dir}" compression="gzip" />
        <move file="${spec.tarball}.gz" todir="${spec.dist}" overwrite="true" />

        <echo message="ZIP archive creation is disabled in build.xml file" />
        <!--zip destfile="${spec.zipball}" basedir="${spec.stage.dir}" /-->
        <!--move file="${spec.zipball}" todir="${spec.dist}" overwrite="true" /-->

        <echo message="Creating PEAR Package..." />
        <exec command="pear package" dir="${spec.pear.dir}" />
        <move file="${spec.pear.dir}/${spec.pear.package}" todir="${spec.dist.pear}" overwrite="true" />
    </target>

    <target name="clean">
        <delete dir="${spec.stage}" />
        <delete dir="${spec.pear}" />
        <delete dir="${spec.dist}" />
    </target>

</project>