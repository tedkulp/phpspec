<?xml version="1.0" encoding="UTF-8"?>
<chapter id="execution.methods.for.phpspec">
  <title>PHPSpec の実行方法</title>

  <para>
    PHPSpec でスペックやサンプルを実行する方法には、二通りのモードがあります。
    このマニュアルで主に使用する方法は、bash や MS-DOS などのコマンドプロンプトから
    <classname>phpspec</classname> コマンドを実行するものです。
    もうひとつの方法としては、.php ファイルの URL を指定してお好みのウェブブラウザで開くというものもあります。
    この方式では、プレーンテキストあるいは HTML のいずれかで結果を出力することができます。
    また、さまざまなオプションも指定することができます。
  </para>

  <section id="the.console.runner">
    <title>コンソールからの実行</title>

    <para>
      PHPSpec のデフォルトの実行方法はをコンソールから実行する方式であり、
      これは何も追加の作業なしに行うことができます。
      スペックを書いたら、単にコマンドラインからその場所に移動して
      次のコマンドを実行するだけです。
    </para>

    <screen>phpspec --recursive</screen>

    <para>
      この単純なコマンドは、
      カレントディレクトリ以下を再帰的にスキャンします。
      そして、見つかったすべてのスペックファイルについて、
      すべてのサンプルを実行します。
      このように単純に使えるため、
      コンソールから使用するのは最もよい選択といえるでしょう。
      Unix のコンソールを使用している場合は、
      なんと結果がカラーで表示されます!
    </para>

    <para>
      <classname>phpspec</classname> コマンドにはさまざまなオプションがあります。
      バージョンが上がるにつれて、さらにオプションが追加される予定です。
      各オプションには、通常は長いバージョンと (1 文字の)
      短いバージョンがあります。
      現在使用可能なオプションの一覧を、次の表にまとめます。
    </para>

    <table>
      <title>PHPSpec コマンドのオプション</title>

      <tgroup cols="3">
        <thead>
          <row>
            <entry align="center">長い形式</entry>

            <entry align="center">短い形式</entry>

            <entry align="center">説明</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>--recursive</entry>

            <entry>-r</entry>

            <entry>
              カレントディレクトリ以下を再帰的にスキャンします。
              そして、見つかったすべてのスペックファイルについて、
              すべてのサンプルを実行します。
            </entry>
          </row>

          <row>
            <entry>--reporter=[html/console/text]</entry>

            <entry><emphasis>なし</emphasis></entry>

            <entry>
              いずれかのレポーターを使用して、出力形式を
              HTML、プレーンテキスト、あるいは標準コンソール出力
              のいずれかに指定します。
              デフォルト設定は状況に依存しますが、
              コマンドラインから PHPSpec を実行した場合のデフォルトは、
              常に標準コンソール出力です。
            </entry>
          </row>

          <row>
            <entry>--specdoc</entry>

            <entry>-s</entry>

            <entry>
              すべてのレポーターの出力結果に、specdoc
              (すべてのスペックを普通の文章になおした一覧)
              を追加します。
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>

  <section id="the.http.runner">
    <title>HTTP 経由の実行</title>

    <para>
      HTTP ランナーは、その場ですぐ実行できるというものではありません。
      ウェブブラウザ経由で呼び出したい PHP ファイルについて、
      ちょっとした仕込みを行う必要があります。
      とはいえそれは本当にシンプルな作業なので、
      HTTP 経由での実行もコマンドラインからの実行と同列に扱って説明することにしました。
    </para>

    <para>
      HTTP 経由で実行するためのファイル AllSPecs.php の例を以下に示します。
    </para>

    <programlisting role="php">&lt;?php

require_once 'PHPSpec.php';

$options = new stdClass;
$options-&gt;recursive = true;
$options-&gt;specdocs = true;
$options-&gt;reporter = 'html';

PHPSpec_Runner::run($options);</programlisting>

    <para>
      <classname>PHPSpec_Runner</classname> クラスは、
      実際にはデフォルトのコンソールランナーで内部的に使用されているものです。
      つまりここで行っているのは非常に単純なことです。
      この例で実際にやっていることは、
      コンソールランナーが内部で行っている作業を PHP ファイルに書き出しているだけで、
      ウェブブラウザから呼び出されたときにもこれを実行できるようにしています。
    </para>

    <para>
      まず、ベースとなるファイル PHPSpec.php をインクルードします。
      PHPSpec は PHP5 の autoload 機能を使用しているので、
      PHPSpec のその他のファイルをインクルードする必要はありません。
      次に、必要なオプションを <classname>stdClass</classname>
      (PHP5 の標準クラス) のプロパティとして設定します。
      オプションとして、ふつうの配列を使用することもできます。
      配列で指定しても、内部で自動的にオブジェクトに変換します。
    </para>

    <para>
      ここで指定しているオプションは、すべてのスペックを実行するためのごく一般的なものです。
      PHPSpec はカレントディレクトリ以下を再帰的に検索し、
      みつかったスペックのすべてのサンプルを実行します。
      出力結果には specdoc 形式のプレーンテキストが追加され、
      実行結果は HTML 形式で出力されます。
    </para>

    <para>
      最後に、PHPSpec_Runner の static メソッド run() を実行します。
      これで完了!
      特定のサブディレクトリのスペックだけを実行したいのなら、
      このファイルをそのサブディレクトリにコピーすればいいでしょう
      (再帰検索のオプションは、親ディレクトリは対象外となります)。
    </para>
  </section>
</chapter>